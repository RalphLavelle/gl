@import './variables.scss';

.menuIcon {
	border: 0;
	padding: 0;
	display: block;
	cursor: pointer;

	i {
		font-size: 2rem;
	}

	@include respond-to(medium) {
		display: none;
	}
}

.mainDisplay {
	display: flex;
	flex-direction: row;
	gap: 0.5rem;
	align-items: center;
	justify-content: space-between;
	padding: 1rem map-get($margins, small);

	@include respond-to(small) {
		padding: map-get($margins, medium);
	}

	.headerItems {
		display: none;

		@include respond-to(medium) {
			display: flex;
			align-items: flex-end;

			.works {
				display: flex;
				gap: 0.5rem;

				ul {
					display: flex;
					gap: 0.5rem;

					li {
						padding: 0;
					}
				}
			}
		}

		gap: 1.5rem;
		font-size: 1.25rem;
	}
}

.smallDisplay {
	display: flex;
	flex-direction: column;
	align-items: stretch;

	li {
		border-top: solid 1px map-get($colours, grey);

		a {
			color: map-get($colours, dark);

			&:hover {
				color: map-get($colours, grey);
			}
		}

		&.collections {
			display: flex;
			justify-content: center;
			align-items: center;
			gap: 0.25rem;
		}
	}
}

.content {
	color: #fff;
	margin: map-get($margins, small);

	@include respond-to(small) {
		margin: map-get($margins, medium);
	}

	@include respond-to(medium) {
		margin: map-get($margins, xlarge);
	}
}

.subheader,
.intro {
	padding: map-get($margins, small);

	@include respond-to(small) {
		padding: map-get($margins, medium);
	}
}

.subheader {
	background-color: map-get($colours, grey);
	color: map-get($colours, light);
}

.intro {
	color: map-get($colours, dark);

	ul {
		margin-left: 1rem;
		font-weight: bold;
	}

	.works {
		display: flex;
		justify-content: space-between;
	}

	figure {
		padding: 0;
		margin: 0;
		margin-bottom: 2rem;
		display: flex;
		justify-content: center;

		img {
			max-width: 100%;
			height: auto;
		}
	}
}

.menu {
	border-bottom: solid 3px map-get($colours, dark);
	color: #fff;
	padding: 0.5rem;

	&:hover {
		cursor: pointer;
		background-color: map-get($colours, dark);
	}
}

.collection {
	padding: map-get($margins, small);

	@include respond-to(small) {
		padding: map-get($margins, medium);
	}

	.paintings {
		display: grid;
		grid-template-columns: 1fr;
		row-gap: 1rem;
		column-gap: 1rem;
		margin: map-get($margins, small);

		@include respond-to(small) {
			margin: map-get($margins, medium);
		}

		@media screen and (min-width: 600px) {
			grid-template-columns: 1fr 1fr;
		}

		@media screen and (min-width: 750px) {
			column-gap: 2rem;
			grid-template-columns: 1fr 1fr 1fr;
		}

		li {
			justify-self: center;
			align-self: end;
			display: flex;
			flex-direction: column;
			align-items: center;

			p {
				word-wrap: normal;
				padding: 0 1rem;
				font-size: 0.8rem;
			}

			img {
				max-width: 100%;
			}
		}
	}
}

.paintingTitle {
	display: flex;
	flex-direction: column;

	a {
		align-self: flex-end;
	}
}

.painting {
	padding: map-get($margins, small);

	@include respond-to(small) {
		padding: map-get($margins, medium);
	}

	.frame {
		border: solid 4px map-get($colours, grey);
		display: flex;
		justify-content: center;
		align-items: center;
		border-radius: 0.25rem;

		img {
			max-width: 100%;
		}
	}

	.description {
		padding: map-get($margins, small);

		@include respond-to(small) {
			padding: map-get($margins, medium);
		}

		margin: 0;
		text-align: center;
	}
}

.aboutIntro,
.aboutContent,
.cv {
	padding: map-get($margins, small);

	@include respond-to(small) {
		padding: map-get($margins, medium);
	}

	@include respond-to(medium) {
		padding: map-get($margins, xlarge);
	}
}

.aboutIntro {
	background-color: map-get($colours, dark);
	color: #fff;
}

.aboutContent {
	p {
		margin-top: 0;

		em {
			font-size: 1.25rem;
			color: map-get($colours, dark);
			font-style: normal;
		}
	}

	img {
		float: left;
		margin: 0 2rem 2rem 0;
		width: 50%;
		height: 50%;
	}

	.aboutPress {
		margin-top: 3rem;
		font-style: italic;

		.attribution {
			font-style: normal;
		}
	}
}

.cv {
	background-color: #fff;
	color: #000;

	h3 {
		color: map-get($colours, primary);
	}

	img {
		max-width: 100%;
		height: auto;
	}

	.exhibitions {
		display: grid;
		grid-template-columns: 1fr 1fr;

		@include respond-to(medium) {
			grid-template-columns: 1.5fr 1fr;
		}

		row-gap: 0.5rem;
		column-gap: 1rem;

		.solo {
			grid-row: 1 / 2;
			grid-column: span 2;

			@include respond-to(small) {
				grid-column: span 2;
			}
		}

		.group {
			grid-row: 4 / 5;
			grid-column: span 2;

			@include respond-to(medium) {
				grid-column: span 2;
			}
		}

		em {
			font-style: normal;
			font-weight: bold;
		}

		time {
			font-style: italic;
			align-self: flex-end;
			text-align: right;
		}

		.locationAndTime {
			display: flex;
			flex-direction: column;

			@include respond-to(medium) {
				flex-direction: row;
				justify-content: space-between;
			}
		}
	}
}

.emailBlock {
	width: 100%;
	text-align: center;
	padding: 0;
	margin: 1rem 0 0 0;
}